---
swagger: "2.0"
info:
  version: "2019-12-07T16:53:52Z"
  title: "DSP Engine API"
host: "api.lambda.dsp-engine.vibraneur.com"
schemes:
  - "https"
paths:
  /v1/algorithms:
    get:
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        type: "mock"
  /v1/algorithms/fft:
    post:
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "DspDataInput"
          required: true
          schema:
            $ref: "#/definitions/DspDataInput"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ComplexNumberResultEncapsulation"
      x-amazon-apigateway-request-validator: "Validate body"
      x-amazon-apigateway-integration:
        credentials: "arn:aws:iam::742872122332:role/lambda_invoke_function_assume_apigw_role."
        uri: "arn:aws:apigateway:us-east-1:lambda:path//2015-03-31/functions/arn:aws:lambda:us-east-1:742872122332:function:fft/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws"
    options:
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        passthroughBehavior: "when_no_match"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        type: "mock"
  /v1/algorithms/kurtosis:
    post:
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "DspDataInput"
          required: true
          schema:
            $ref: "#/definitions/DspDataInput"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/SingleDigitDspDataOutput"
      x-amazon-apigateway-request-validator: "Validate body"
      x-amazon-apigateway-integration:
        credentials: "arn:aws:iam::742872122332:role/lambda_invoke_function_assume_apigw_role."
        uri: "arn:aws:apigateway:us-east-1:lambda:path//2015-03-31/functions/arn:aws:lambda:us-east-1:742872122332:function:kurtosis/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws"
  /v1/algorithms/rms:
    post:
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "DspDataInput"
          required: true
          schema:
            $ref: "#/definitions/DspDataInput"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/SingleDigitDspDataOutput"
      x-amazon-apigateway-request-validator: "Validate body"
      x-amazon-apigateway-integration:
        credentials: "arn:aws:iam::742872122332:role/lambda_invoke_function_assume_apigw_role."
        uri: "arn:aws:apigateway:us-east-1:lambda:path//2015-03-31/functions/arn:aws:lambda:us-east-1:742872122332:function:rootMeanSquare/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws"
definitions:
  SingleDigitDspDataOutput:
    type: "object"
    properties:
      statusCode:
        type: "number"
      body:
        $ref: "#/definitions/SingleDigitResultEncapsulation"
    title: "SingleDigitDspDataOutput"
  DspDataInput:
    type: "object"
    properties:
      data:
        type: "array"
        items:
          type: "number"
    title: "DspDataInput"
  Empty:
    type: "object"
    title: "Empty Schema"
  ComplexNumberResultEncapsulation:
    type: "object"
    properties:
      timestamp:
        type: "string"
      inputData:
        type: "array"
        items:
          type: "number"
      result:
        type: "array"
        items:
          type: "string"
      resultType:
        type: "string"
      description:
        type: "string"
    title: "ComplexNumberResultEncapsulation"
  SingleDigitResultEncapsulation:
    type: "object"
    properties:
      timestamp:
        type: "string"
      inputData:
        type: "array"
        items:
          type: "number"
      result:
        type: "number"
      resultType:
        type: "string"
      description:
        type: "string"
    title: "SingleDigitResultEncapsulation"
x-amazon-apigateway-request-validators:
  Validate body:
    validateRequestParameters: false
    validateRequestBody: true
